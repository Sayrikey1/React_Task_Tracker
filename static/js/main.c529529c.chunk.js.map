{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Footer","href","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEMA,EAAS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC3B,OACI,wBAAQA,QAASA,EAASC,MAAO,CAACC,gBAAiBJ,GACnDK,UAAU,MADV,SACiBJ,KAIzBF,EAAOO,aAAe,CAClBN,MAAO,aASID,QCfTQ,EAAS,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAC3B,OACI,yBAAQL,UAAU,SAAlB,UACI,6BAAKG,IAEL,cAAC,EAAD,CAAQR,MAAOU,EAAU,MAAO,QAChCT,KAAMS,EAAU,QAAS,MACzBR,QAASO,QAOrBF,EAAOD,aAAe,CAClBE,MAAO,gBAaID,QCvBAI,EATA,WACX,OACG,mCACI,oDACA,mBAAGC,KAAK,SAAR,uB,QCeIC,EAjBF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC5B,OACI,sBAAKX,UAAS,eAAUS,EAAKG,SAC7B,WAAa,KAAOC,cAAe,kBACnCF,EAASF,EAAKK,KAFd,UAGI,+BAAKL,EAAKb,KAAM,GAChB,cAAC,IAAD,CACAE,MAAO,CAAEH,MAAM,MAAOoB,OACtB,WACAlB,QAAS,kBAAMa,EAASD,EAAKK,UAG7B,4BAAIL,EAAKO,UCDNC,EAXD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC7B,OACI,mCACGO,EAAMC,KAAI,SAACV,GAAD,OACP,cAAC,EAAD,CAAoBA,KAAMA,EAC1BC,SAAUA,EAAUC,SAAUA,GADnBF,EAAKK,UC0CfM,EA9CC,SAAC,GAAa,IAAZhB,EAAW,EAAXA,MACd,EAAwBiB,mBAAS,IAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAOL,EAAP,KAAYO,EAAZ,KACA,EAAgCF,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBY,EAAjB,KAgBA,OACG,uBAAMxB,UAAU,WAAWyB,SAfb,SAACC,GACdA,EAAEC,iBAEE/B,GAKJQ,EAAM,CAACR,OAAMoB,MAAKJ,aAElBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IARRI,MAAM,sBAWX,UACI,sBAAK5B,UAAU,eAAf,UACI,yCACA,uBAAO6B,KAAK,OAAOC,YAAY,WAC/BC,MAAOnC,EAAMoC,SAAU,SAACN,GAAD,OACtBJ,EAAQI,EAAEO,OAAOF,aAEtB,sBAAK/B,UAAU,eAAf,UACI,+CACA,uBAAO6B,KAAK,OAAOC,YAAY,iBAC/BC,MAAOf,EAAKgB,SAAU,SAACN,GAAD,OACrBH,EAAOG,EAAEO,OAAOF,aAErB,sBAAK/B,UAAU,kCAAf,UACI,iDACA,uBAAO6B,KAAK,WACZK,QAAStB,EACTmB,MAAOnB,EAAUoB,SAAU,SAACN,GAAD,OAC1BF,EAAYE,EAAES,cAAcD,eAGjC,uBAAOL,KAAK,SAASE,MAAM,YAAY/B,UAAU,sBC8D7CoC,EAhGH,WACV,MAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOH,EAAP,KAAcqB,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAQ,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfL,EAASK,GAFM,2CAAH,qDAIdH,MACC,IAGL,IAAME,EAAU,uCAAG,8BAAAD,EAAA,sEACCG,MAAM,+BADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAIVA,GAJU,2CAAH,qDAQVC,EAAS,uCAAG,WAAOnC,GAAP,iBAAA4B,EAAA,sEACEG,MAAM,+BAAD,OAAgC/B,IADvC,cACVgC,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAITA,GAJS,2CAAH,sDAQTE,EAAO,uCAAG,WAAOzC,GAAP,iBAAAiC,EAAA,sEACIG,MAAM,8BACxB,CACEM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU9C,KAPT,cACRqC,EADQ,gBAUKA,EAAIC,OAVT,OAURC,EAVQ,OAYdT,EAAS,GAAD,mBAAKrB,GAAL,CAAY8B,KAZN,2CAAH,sDAoBPQ,EAAU,uCAAG,WAAO1C,GAAP,SAAA4B,EAAA,sEACXG,MAAM,+BAAD,OAAgC/B,GAC3C,CACEqC,OAAQ,WAHO,OAKjBZ,EAASrB,EAAMuC,QAAO,SAAChD,GAAD,OAAUA,EAAKK,KAAOA,MAL3B,2CAAH,sDASV4C,EAAc,uCAAG,WAAO5C,GAAP,qBAAA4B,EAAA,sEACMO,EAAUnC,GADhB,cACf6C,EADe,OAEfC,EAFe,2BAEDD,GAFC,IAGnB/C,UAAW+C,EAAa/C,WAHL,SAKHiC,MAAM,+BAAD,OAAgC/B,GACvD,CACEqC,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUK,KAXF,cAKfd,EALe,gBAcFA,EAAIC,OAdF,OAcfC,EAde,OAerBT,EACErB,EAAMC,KAAI,SAACV,GAAD,OACVA,EAAKK,KAAOA,EAAZ,2BAAqBL,GAArB,IAA2BG,UACxBoC,EAAKpC,WAAYH,MAlBD,4CAAH,sDAuBlB,OACE,sBAAKT,UAAU,YAAf,UACE,cAAC,EAAD,CAAQI,MAAO,kBAAMkC,GAChBD,IAAchC,QAASgC,IACxBA,GAAe,cAAC,EAAD,CAASjC,MAAO8C,IAC/BhC,EAAM2C,OAAS,EAAK,cAAC,EAAD,CAAO3C,MAAOA,EACnCR,SAAU8C,EAAY7C,SAAU+C,IAC/B,kBACL,cAAC,EAAD,QCtFUI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c529529c.chunk.js","sourcesContent":["import PropTypes from 'prop-types' \r\n\r\nconst Button = ({ color, text, onClick }) => { \r\n    return (\r\n        <button onClick={onClick} style={{backgroundColor: color}} \r\n        className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n\r\nconst Header = ({title, onAdd, showAdd}) => { \r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {\r\n            <Button color={showAdd ? 'red': 'green' } \r\n            text={showAdd ? 'Close': 'Add'} \r\n            onClick={onAdd}/>\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nHeader.defaultProps = { \r\n    title: \"Task Tracker\"\r\n  }\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n//CSS in JS\r\n// const headingStyle = {\r\n//     color: 'red',\r\n//     backgroundColor: 'black',\r\n// }\r\n\r\nexport default Header\r\n\r\n","const Footer = () => {\r\n    return (\r\n       <footer>\r\n           <p>Copyright &copy; 2021</p>\r\n           <a href='/about'>About</a>\r\n       </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ?\r\n        'reminder' : \" \"}`} onDoubleClick={() => \r\n        onToggle(task.id)}>\r\n            <h3>{task.text}{''} \r\n            <FaTimes \r\n            style={{ color:'red', cursor: \r\n            \"pointer\"}} \r\n            onClick={() => onDelete(task.id)}\r\n             />\r\n             </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n ","import Task from './Task' \r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => { \r\n    return (\r\n        <>\r\n          {tasks.map((task) => (\r\n              <Task key={task.id} task={task}\r\n              onDelete={onDelete} onToggle={onToggle}/>\r\n          ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState }from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false )\r\n    }\r\n    return (\r\n       <form className='add-form' onSubmit={onSubmit}>\r\n           <div className='form-control'>\r\n               <label>Task</label>\r\n               <input type='text' placeholder='Add Task'\r\n               value={text} onChange={(e) =>\r\n                setText(e.target.value)}/>\r\n           </div>\r\n           <div className='form-control'>\r\n               <label>Day & Time</label>\r\n               <input type='text' placeholder='Add Day & Time'\r\n               value={day} onChange={(e) =>\r\n                setDay(e.target.value)}/>\r\n           </div>\r\n           <div className='form-control form-control-check' >\r\n               <label>Set Reminder</label>\r\n               <input type='checkbox'\r\n               checked={reminder}\r\n               value={reminder} onChange={(e) =>\r\n                setReminder(e.currentTarget.checked)}/>\r\n           </div>\r\n\r\n           <input type='submit' value='Save Task' className='btn btn-block'/>\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect} from \"react\"\nimport { BrowserRouter as Router, Route, Routes } from \n'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport About from './components/About'\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n    getTasks()\n  }, [])\n\n//Fetch Tasks\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n\n  return data\n }\n\n //Fetch Tasks\nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n\n  return data\n }\n\n//Add Task\nconst addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks',\n  {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(task)\n  }) \n  \n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n  // const id = Math.floor(Math.random()*10000) + 1\n  // const newTask = {id, ...task}\n  // setTasks([...tasks, newTask])\n}\n\n//Delete Task\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, \n  {\n    method: 'DELETE',\n  })\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n//Toggle Reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = {...taskToToggle, \n    reminder: !taskToToggle.reminder}\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`,\n  {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? {...task, reminder: \n      !data.reminder} : task\n      )\n    )\n} \n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask\n         (!showAddTask)} showAdd={showAddTask}/>\n         {showAddTask && <AddTask onAdd={addTask}/>}\n         {tasks.length > 0 ? (<Tasks tasks={tasks} \n         onDelete={deleteTask} onToggle={toggleReminder}/>) : \n         (\"No Task To Show\")} \n     <Footer />\n     \n    </div>\n    \n  ) \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}